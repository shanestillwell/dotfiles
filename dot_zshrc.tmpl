# Path to your oh-my-zsh installation.
export ZSH={{ .chezmoi.homeDir }}/.oh-my-zsh

HISTSIZE=50000
SAVEHIST=50000  # Make this equal to HISTSIZE

setopt INC_APPEND_HISTORY    # Add commands to history as they are typed
setopt HIST_IGNORE_ALL_DUPS  # Don't record duplicates
setopt HIST_SAVE_NO_DUPS     # Don't write duplicate entries
setopt SHARE_HISTORY         # Share history between sessions

# 1Password integration
export OP_BIOMETRIC_UNLOCK_ENABLED=true

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
ZSH_THEME="dracula"
#ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

# User configuration
ZSH_TMUX_AUTOCONNECT=false

# Golang
export GOROOT="$(brew --prefix golang)/libexec"
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export GOPATH=$HOME/go

export PATH="./node_modules/.bin:$HOME/.sbin:${GOPATH}/bin:${GOROOT}/bin:$PATH"
plugins=(git npm docker docker-compose yarn)

# Homebrew's autocompletion
FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

# Lazy Load NVM
zstyle ':omz:plugins:nvm' lazy yes

source $ZSH/oh-my-zsh.sh

# Autojump
#[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh
. $(brew --prefix)/etc/profile.d/z.sh


# FZF
# export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

source ~/.bash_aliases;

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred
# ditor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR='nvim'
export VISUAL='nvim'

# export JAVA_HOME=`/usr/libexec/java_home -v 1.8`

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export HOMEBREW_GITHUB_API_TOKEN="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"

# Gitlab NPM Token
export CI_JOB_TOKEN="SoTQNjNfUznzwdXyrwcT"

# fnm
# export PATH=$HOME/.fnm:$PATH
# eval `fnm env`
#

# Use Docker Buildkit
export COMPOSE_DOCKER_CLI_BUILD=1
export DOCKER_BUILDKIT=1


# GPG signing for git
export GPG_TTY=$(tty)

ulimit -n 65536

# machine-specific configuration

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end


# Remove history lock file if it exists and process is not running
if [ -L "$HISTFILE.LOCK" ]; then
    pid=$(readlink "$HISTFILE.LOCK" | cut -d/ -f2 | cut -d- -f2)
    if ! kill -0 "$pid" 2>/dev/null; then
        rm -f "$HISTFILE.LOCK"
    fi
fi
